AC_INIT(src/Makefile.am)

AM_INIT_AUTOMAKE(devhelp, 0.9.2)
AM_CONFIG_HEADER(config.h)

AM_SANITY_CHECK
AM_MAINTAINER_MODE

AC_PROG_CC
AC_PROG_CXX
AC_ISC_POSIX
AC_HEADER_STDC
AM_PROG_LIBTOOL
AM_PATH_GLIB_2_0

AC_PROG_INTLTOOL
AC_PATH_PROG(GCONFTOOL, gconftool-2)

AM_GCONF_SOURCE_2

dnl NOTE : it appears that some systems do not like it when you use line
dnl        continuation charactes to split CFLAGS into readable chunks
if test "x$GCC" = "xyes"; then
   CFLAGS="$CFLAGS -Wall -Wno-uninitialized -Wchar-subscripts -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wpointer-arith -Wno-sign-compare"
fi

AC_SUBST(CFLAGS)
AC_SUBST(LDFLAGS)

PKG_CHECK_MODULES(DEVHELP, [
	gtk+-2.0 >= 2.2.0])

PKG_CHECK_MODULES(LIBDEVHELP, [
        gtk+-2.0 >= 2.3.1
	libgnomeui-2.0 >= 2.2.0
	gnome-vfs-2.0 >= 2.2.0
	libglade-2.0 >= 2.0.0
])

AC_MSG_CHECKING([which mozilla to use])

MOZILLA=
AC_ARG_WITH([mozilla],
	AC_HELP_STRING([--with-mozilla@<:@=mozilla|firefox|thunderbird@:>@],
		       [Whether to use mozilla, firefox or thunderbird gtkmozembed (default: mozilla)]),
	[MOZILLA="$withval"])

dnl try to autodetect: if mozilla exists, use it, else try firefox, then thunderbird
if test "x$MOZILLA" = "x"; then
  if pkg-config --exists mozilla-gtkmozembed; then
    MOZILLA=mozilla
  elif pkg-config --exists firefox-gtkmozembed; then
    MOZILLA=firefox
  elif pkg-config --exists thunderbird-gtkmozembed; then
    MOZILLA=thunderbird
  else
    AC_MSG_ERROR([no mozilla installation found])
  fi
elif test "x$with_mozilla" != "xmozilla" -a "x$with_mozilla" != "xfirefox" -a "x$with_mozilla" != "xthunderbird"; then
  AC_MSG_ERROR([unknown mozilla name ($MOZILLA)])
fi

AC_MSG_RESULT([$MOZILLA])
AC_SUBST(MOZILLA)

PKG_CHECK_MODULES(MOZILLA_COMPONENT, $MOZILLA-gtkmozembed)
AC_SUBST(MOZILLA_COMPONENT_CFLAGS)
AC_SUBST(MOZILLA_COMPONENT_LIBS)

MOZILLA_INCLUDE_ROOT="`$PKG_CONFIG --variable=includedir $MOZILLA-gtkmozembed`"
AC_SUBST(MOZILLA_INCLUDE_ROOT)

MOZILLA_HOME="`$PKG_CONFIG --variable=libdir $MOZILLA-gtkmozembed`"
AC_SUBST(MOZILLA_HOME)

dnl Checks for zlib library.
_cppflags="${CPPFLAGS}"
_ldflags="${LDFLAGS}"
 
AC_ARG_WITH(zlib,
[  --with-zlib[=DIR]       use libz in DIR],[
        if test "$withval" != "no" -a "$withval" != "yes"; then
                Z_DIR=$withval
                CPPFLAGS="${CPPFLAGS} -I$withval/include"
                LDFLAGS="${LDFLAGS} -L$withval/lib"
        fi
])
if test "$with_zlib" = "no"; then
        echo "Disabling compression support"
else
        AC_CHECK_HEADERS(zlib.h,
                AC_CHECK_LIB(z, gzread,[
                        AC_DEFINE(HAVE_LIBZ,1,[zlib is available])
                        if test "x${Z_DIR}" != "x"; then
                                Z_CFLAGS="-I${Z_DIR}/include"
                                Z_LIBS="-L${Z_DIR}/lib -lz"
                                [case ${host} in
                                        *-*-solaris*)
                                                Z_LIBS="-L${Z_DIR}/lib -R${Z_DIR}/lib -lz"
                                                ;;
                                esac]
                        else
                                Z_LIBS="-lz"
                        fi]))
fi

AC_SUBST(Z_CFLAGS)
AC_SUBST(Z_LIBS)

CPPFLAGS=${_cppflags}
LDFLAGS=${_ldflags}

ALL_LINGUAS="am az be ca cs da de el en_CA en_GB es fi fr gu he hi hr is it ja kn ko lv mk ml ms nb nl no pa pl pt pt_BR ru sk sq sr sr@Latn sv tr uk vi zh_CN zh_TW"

GETTEXT_PACKAGE=devhelp
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE,"$GETTEXT_PACKAGE", [Package name for gettext])

AM_GLIB_GNU_GETTEXT

AC_PATH_PROG(GLIB_GENMARSHAL, glib-genmarshal)

AC_OUTPUT([
Makefile
libdevhelp-1.0.pc
dtd/Makefile
po/Makefile.in
src/Makefile
ui/Makefile
misc/Makefile
])
